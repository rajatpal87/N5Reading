/**
 * Helper functions for Japanese verb/adjective conjugation forms
 * Maps Kuromoji conjugation data to user-friendly terms
 */

/**
 * Identify conjugation form from Kuromoji data
 * @param {string} conjugationForm - Kuromoji's conjugated_form (e.g., "ÈÄ£Áî®ÂΩ¢", "‰ªÆÂÆöÂΩ¢")
 * @param {string} matchedText - The actual text that appeared
 * @param {string} basicForm - Dictionary form
 * @returns {string} User-friendly conjugation name
 */
export function getConjugationName(conjugationForm, matchedText, basicForm) {
  if (!conjugationForm || conjugationForm === '*') {
    // No conjugation info, try to infer from the text
    if (matchedText === basicForm) {
      return 'Dictionary Form';
    }
    return null;
  }

  // Map Japanese conjugation forms to English
  const formMap = {
    'ÈÄ£Áî®ÂΩ¢': 'Masu Stem', // ÈÄ£Áî®ÂΩ¢ - used for „Åæ„Åô form
    'Êú™ÁÑ∂ÂΩ¢': 'Nai Form Base', // Êú™ÁÑ∂ÂΩ¢ - used for „Å™„ÅÑ form
    '‰ªÆÂÆöÂΩ¢': 'Ba Form', // ‰ªÆÂÆöÂΩ¢ - conditional (~„Å∞)
    'ÂëΩ‰ª§ÂΩ¢': 'Command Form', // ÂëΩ‰ª§ÂΩ¢ - imperative
    'Âü∫Êú¨ÂΩ¢': 'Dictionary Form', // Âü∫Êú¨ÂΩ¢ - plain/dictionary
    '‰ΩìË®ÄÊé•Á∂ö': 'Noun-Modifying', // ‰ΩìË®ÄÊé•Á∂ö - modifies nouns
    'ÈÄ£Áî®„ÇøÊé•Á∂ö': 'Ta Form Base', // ÈÄ£Áî®„ÇøÊé•Á∂ö - „Åü form base
    'ÈÄ£Áî®„ÉÜÊé•Á∂ö': 'Te Form Base', // ÈÄ£Áî®„ÉÜÊé•Á∂ö - „Å¶ form base
    '‰ªÆÂÆöÁ∏ÆÁ¥ÑÔºë': 'Conditional', // Conditional variations
    'Èü≥‰æøÂü∫Êú¨ÂΩ¢': 'Sound Change Form', // Sound change variations
  };

  const baseName = formMap[conjugationForm] || conjugationForm;

  // Now check the actual ending to be more specific
  if (matchedText) {
    if (matchedText.endsWith('„Åæ„Åô') || matchedText.endsWith('„Åæ„Åó„Åü')) {
      return 'Masu Form';
    }
    if (matchedText.endsWith('„Å¶') || matchedText.endsWith('„Åß')) {
      return 'Te Form';
    }
    if (matchedText.endsWith('„Åü') || matchedText.endsWith('„Å†')) {
      return 'Ta Form (Past)';
    }
    if (matchedText.endsWith('„Å™„ÅÑ')) {
      return 'Nai Form (Negative)';
    }
    if (matchedText.endsWith('„Å™„Åã„Å£„Åü')) {
      return 'Past Negative';
    }
    if (matchedText.endsWith('„Çâ„Çå„Çã') || matchedText.endsWith('„Çå„Çã')) {
      return 'Potential/Passive';
    }
    if (matchedText.endsWith('„Å¶„ÅÑ„Çã') || matchedText.endsWith('„Åß„ÅÑ„Çã')) {
      return 'Te-iru Form';
    }
    if (matchedText.endsWith('„Åæ„Åõ„Çì') || matchedText.endsWith('„Åæ„Åõ„Çì„Åß„Åó„Åü')) {
      return 'Masen Form (Polite Negative)';
    }
  }

  return baseName;
}

/**
 * Get color scheme for conjugation form
 */
export function getConjugationColor(formName) {
  if (!formName) return 'bg-gray-100 text-gray-600 border-gray-200';

  const colorMap = {
    'Dictionary Form': 'bg-blue-50 text-blue-700 border-blue-200',
    'Masu Form': 'bg-green-50 text-green-700 border-green-200',
    'Masu Stem': 'bg-green-50 text-green-700 border-green-200',
    'Te Form': 'bg-purple-50 text-purple-700 border-purple-200',
    'Te Form Base': 'bg-purple-50 text-purple-700 border-purple-200',
    'Ta Form (Past)': 'bg-orange-50 text-orange-700 border-orange-200',
    'Ta Form Base': 'bg-orange-50 text-orange-700 border-orange-200',
    'Nai Form (Negative)': 'bg-red-50 text-red-700 border-red-200',
    'Nai Form Base': 'bg-red-50 text-red-700 border-red-200',
    'Past Negative': 'bg-red-50 text-red-700 border-red-200',
    'Te-iru Form': 'bg-indigo-50 text-indigo-700 border-indigo-200',
    'Masen Form (Polite Negative)': 'bg-pink-50 text-pink-700 border-pink-200',
    'Ba Form': 'bg-yellow-50 text-yellow-700 border-yellow-200',
    'Command Form': 'bg-red-100 text-red-800 border-red-300',
    'Potential/Passive': 'bg-teal-50 text-teal-700 border-teal-200',
  };

  return colorMap[formName] || 'bg-gray-100 text-gray-600 border-gray-200';
}

/**
 * Get emoji icon for conjugation form
 */
export function getConjugationIcon(formName) {
  if (!formName) return '';

  const iconMap = {
    'Dictionary Form': 'üìñ',
    'Masu Form': '‚ú®',
    'Masu Stem': '‚ú®',
    'Te Form': 'üîó',
    'Te Form Base': 'üîó',
    'Ta Form (Past)': '‚èÆÔ∏è',
    'Ta Form Base': '‚èÆÔ∏è',
    'Nai Form (Negative)': 'üö´',
    'Nai Form Base': 'üö´',
    'Past Negative': '‚ùå',
    'Te-iru Form': '‚è≥',
    'Masen Form (Polite Negative)': 'üôÖ',
    'Ba Form': '‚ùì',
    'Command Form': '‚ùó',
    'Potential/Passive': 'üí™',
  };

  return iconMap[formName] || 'üí¨';
}

/**
 * Check if this is a verb form worth highlighting
 */
export function isVerbForm(posCategory) {
  return posCategory === 'Verb' || posCategory === 'Auxiliary';
}

/**
 * Group occurrences by conjugation form
 */
export function groupByConjugation(occurrences, basicForm) {
  const grouped = {};
  
  occurrences.forEach(occ => {
    const formName = getConjugationName(
      occ.conjugation_form,
      occ.matched_text,
      basicForm || occ.basic_form
    );
    
    if (!grouped[formName]) {
      grouped[formName] = [];
    }
    grouped[formName].push(occ);
  });
  
  return grouped;
}

/**
 * Get explanation for conjugation form
 */
export function getConjugationExplanation(formName) {
  const explanations = {
    'Dictionary Form': 'Plain, unconjugated form found in dictionaries',
    'Masu Form': 'Polite present/future tense (ÔΩû„Åæ„Åô)',
    'Masu Stem': 'Stem form used to create masu form',
    'Te Form': 'Connecting form (ÔΩû„Å¶/ÔΩû„Åß)',
    'Ta Form (Past)': 'Plain past tense (ÔΩû„Åü/ÔΩû„Å†)',
    'Nai Form (Negative)': 'Plain negative (ÔΩû„Å™„ÅÑ)',
    'Past Negative': 'Plain past negative (ÔΩû„Å™„Åã„Å£„Åü)',
    'Te-iru Form': 'Progressive/continuous (ÔΩû„Å¶„ÅÑ„Çã)',
    'Masen Form (Polite Negative)': 'Polite negative (ÔΩû„Åæ„Åõ„Çì)',
    'Ba Form': 'Conditional "if" form (ÔΩû„Å∞)',
    'Command Form': 'Imperative/command form',
    'Potential/Passive': 'Can do / is done (ÔΩû„Çâ„Çå„Çã/ÔΩû„Çå„Çã)',
  };
  
  return explanations[formName] || 'Conjugated form';
}

